$TITLE  NOBLE-SOFT ANSWER-TIMES VERSION 6.9.1 -- TIMES VERSION 3.6.0
OPTION LIMROW=0, LIMCOL=0, SOLPRINT=ON, ITERLIM=500000000;
OPTION RESLIM=50000, PROFILE=1, SOLVEOPT=REPLACE;
OPTION LP=CPLEX;
OPTION SYSOUT=ON;
$OFFLISTING
$ONEMPTY
*$ONLISTING

$SET SHELL 'ANSWER';

* Activate validation to force VAR_CAP/COMPRD and "square" obj costing.
$SET VALIDATE 'NO'

* Initialize the environment variables.
$SET DEBUG      'NO'
$SET SOLVE_NOW  'YES'
$SET DUMPSOL    'YES'
$SET MODEL_NAME 'TIMES'
$SET SOLVEDA    'YES'
*$SET VEDAVDD   'YES'
$SET VAR_UC    'YES'
* ANSWER allows maximum of 300 states of world
$SET MAXSOW    300

* ANSWER will set SOLANS to 'YES' or 'NO' according to whether or not ANSWER results files are required.
$SET SOLANS     'YES'

* ANSWER will set SUPZERO to 'YES' or 'NO' according to whether or not pure zero time-series results are to be suppresed.
$SET SUPZERO    'YES'

$SET REDUCE 'YES'
$IF DECLARED REG      $SET STARTRUN 'RESTART'
$IF NOT DECLARED REG  $SET STARTRUN 'SCRATCH'

* KILL old user values if running from restart
*$IF DECLARED REG  $BATINCLUDE initclr.mod

* Access some of the parameters in the VDA extension.
$SET VDA 'YES'

* ANSWER will automatically generate $SETs according to Model Variants and Objective Function Options selected by user.


* Unasterisk the line(s) below to invoke the SPINES Model Variant
*$SET SPINES YES
*$SET SOLVEDA 1

$SET OBJ 'AUTO'

* Unasterisk the line below to invoke the OBLONG Objective Function Option
*$SET OBLONG 'YES'
* Unasterisk the line below to invoke the OBJANN Objective Function Option
*$SET OBJANN 'YES'

* If DAMAGE, RETIRE control variables are not set, set them to the ANSWER-TIMES default of 'NO'.
$IF NOT SET DAMAGE $SET DAMAGE 'NO'
$IF NOT SET RETIRE $SET RETIRE 'NO'

*$SET BOTIME 1970

$SET PGPRIM "'ACTGRP'"
$SET RELAX_PRC_CG 'YES'


* Merge declarations & data.
$ONMULTI

* The times-slices MUST come 1st to ensure ordering OK.
* Now ANSWER-TIMES generates SET ALL_TS timeslice definitions in file <Run>_TS.DDS 
$INCLUDE REF_TS.DDS

* Perform fixed declarations.
$BATINCLUDE initsys.mod

* Declare the (system/user) empties.
$BATINCLUDE initmty.mod ier

* Convert 0 => EPS.
*$ONEPS

* Make declarations needed when TIMES DD is generated by ANSWER.
$INCLUDE MMINIT.ANS
* Accept the actual scenario data.
$INCLUDE BASE+REGION1.DD
$INCLUDE DMD_ALL+REGION1.DDS
$INCLUDE TCH_AGR+REGION1.DDS
$INCLUDE TCH_RES+REGION1.DDS
$INCLUDE TCH_COM+REGION1.DDS
$INCLUDE TCH_IND+REGION1.DDS
$INCLUDE TCH_IND_FIX+REGION1.DDS
$INCLUDE TCH_TRA_FR_1+REGION1.DDS
$INCLUDE TCH_TRA_EVS+REGION1.DDS
$INCLUDE TCH_PWR+REGION1.DDS
$INCLUDE TCH_PWR_WB+REGION1.DDS
$INCLUDE SUP_COAL_MC+REGION1.DDS
$INCLUDE SUP_GAS_MC+REGION1.DDS
$INCLUDE sup_refdt3ev+REGION1.DDS
$INCLUDE OFF_TRA_E85+REGION1.DDS
$INCLUDE OFFMOZ+REGION1.DDS
$INCLUDE OFFSHALE+REGION1.DDS
$INCLUDE SIM_COMPRICE+REGION1.DDS
$INCLUDE SIM_DEM+REGION1.DDS
$INCLUDE SIM_OTHPAR+REGION1.DDS
$INCLUDE SIM_PRCCOST+REGION1.DDS
$INCLUDE DMDTECHAFCOM+REGION1.DDS
$INCLUDE DMDTECHAFRES+REGION1.DDS
$INCLUDE TCH_PWR_NODG+REGION1.DDS
$INCLUDE TCH_PWR_PUMP+REGION1.DDS
$INCLUDE SASOL_RETIRE+REGION1.DDS
$INCLUDE ANNUAL_FIXES+REGION1.DDS
$INCLUDE ESKOM_EFF+REGION1.DDS
$INCLUDE MINCLE3_COST+REGION1.DDS
$INCLUDE NO_NEW_CTL+REGION1.DDS
$INCLUDE PWR_OSOL_5Y+REGION1.DDS
$INCLUDE PWR_OWND_5Y+REGION1.DDS
$INCLUDE PWR_COAL_CF+REGION1.DDS
$INCLUDE PWR_RE_NCAPS+REGION1.DDS
$INCLUDE PWR_COALCAPS+REGION1.DDS
$INCLUDE SASOLOPERATE+REGION1.DDS
$INCLUDE PWR_FOMS_LAB+REGION1.DDS
$INCLUDE PEXCME_CPI+REGION1.DDS
$INCLUDE BATTERIES+REGION1.DDS
$INCLUDE TCH_PWR_REL+REGION1.DDS
$INCLUDE BASE+TRADE.DD
$INCLUDE DMD_ALL+TRADE.DDS
$INCLUDE TCH_AGR+TRADE.DDS
$INCLUDE TCH_RES+TRADE.DDS
$INCLUDE TCH_COM+TRADE.DDS
$INCLUDE TCH_IND+TRADE.DDS
$INCLUDE TCH_IND_FIX+TRADE.DDS
$INCLUDE TCH_TRA_FR_1+TRADE.DDS
$INCLUDE TCH_TRA_EVS+TRADE.DDS
$INCLUDE TCH_PWR+TRADE.DDS
$INCLUDE TCH_PWR_WB+TRADE.DDS
$INCLUDE SUP_COAL_MC+TRADE.DDS
$INCLUDE SUP_GAS_MC+TRADE.DDS
$INCLUDE sup_refdt3ev+TRADE.DDS
$INCLUDE OFF_TRA_E85+TRADE.DDS
$INCLUDE OFFMOZ+TRADE.DDS
$INCLUDE OFFSHALE+TRADE.DDS
$INCLUDE SIM_COMPRICE+TRADE.DDS
$INCLUDE SIM_DEM+TRADE.DDS
$INCLUDE SIM_OTHPAR+TRADE.DDS
$INCLUDE SIM_PRCCOST+TRADE.DDS
$INCLUDE DMDTECHAFCOM+TRADE.DDS
$INCLUDE DMDTECHAFRES+TRADE.DDS
$INCLUDE TCH_PWR_NODG+TRADE.DDS
$INCLUDE TCH_PWR_PUMP+TRADE.DDS
$INCLUDE SASOL_RETIRE+TRADE.DDS
$INCLUDE ANNUAL_FIXES+TRADE.DDS
$INCLUDE ESKOM_EFF+TRADE.DDS
$INCLUDE MINCLE3_COST+TRADE.DDS
$INCLUDE NO_NEW_CTL+TRADE.DDS
$INCLUDE PWR_OSOL_5Y+TRADE.DDS
$INCLUDE PWR_OWND_5Y+TRADE.DDS
$INCLUDE PWR_COAL_CF+TRADE.DDS
$INCLUDE PWR_RE_NCAPS+TRADE.DDS
$INCLUDE PWR_COALCAPS+TRADE.DDS
$INCLUDE SASOLOPERATE+TRADE.DDS
$INCLUDE PWR_FOMS_LAB+TRADE.DDS
$INCLUDE PEXCME_CPI+TRADE.DDS
$INCLUDE BATTERIES+TRADE.DDS
$INCLUDE TCH_PWR_REL+TRADE.DDS
* Include Rule-Based Constraint DDS's.
$INCLUDE REF_RULES+REGION1.DDS

$SET RUN_NAME  'REF'

* Define the years for the run, and define Parameters B and E.
SET MILESTONYR / 2012, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 2050 /;
PARAMETER B / 2012 2012, 2015 2014, 2020 2018, 2025 2023, 2030 2028, 2035 2033, 2040 2038, 2045 2043, 2050 2048 /;
PARAMETER E / 2012 2013, 2015 2017, 2020 2022, 2025 2027, 2030 2032, 2035 2037, 2040 2042, 2045 2047, 2050 2050 /;

* Transform sets, parameters in TIMES DD generated by ANSWER
* into sets, parameters in TIMES GAMS code.
$INCLUDE ANS2GAMS-DATAYEAR.ANS

* ANSWER will set G_DYEAR to the G_DYEAR database value.
G_DYEAR = 2018;

* For a Time-Stepped Run, ANSWER will set G_OVERLAP to the G_OVERLAP value specified by the user.
$IF NOT '%TIMESTEP%' == '' G_OVERLAP = 0; display G_OVERLAP;

* Unasterisk the line below to set MIP optimality tolerance for an ETL/Discrete Investment/Discrete Retirement run. 
*OPTION OPTCR = 0.0;

* ANSWER will put out appropriate $SET SPOINT, $SET LPOINT lines 
* determined from Run Model Restart and Save options selected.
* No Restart or Save, so no SPOINT or LPOINT

$SET OBJ AUTO
$SET OBLONG YES
$SET RPT_OPT NCAP.1 -1
*$SET RPT_FLOTS ANNUAL
$SET ANNCOST LEV


RPT_OPT('OBJ','1') = 1;


* Do the rest.
$BATINCLUDE maindrv.mod mod
